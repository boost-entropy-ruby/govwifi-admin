version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo "AWS_REGION is $AWS_REGION "
      - STAGING_REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/govwifi/staging/admin
      - PRODUCTION_REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/govwifi/production/admin
      - echo "STAGING_REPOSITORY_URI is $STAGING_REPOSITORY_URI"
      - echo "PRODUCTION_REPOSITORY_URI is $PRODUCTION_REPOSITORY_URI"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG="latest"
      - echo "$DOCKER_HUB_AUTHTOKEN_ENV" | docker login -u $(echo $DOCKER_HUB_USERNAME_ENV) --password-stdin
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --build-arg BUNDLE_INSTALL_CMD='bundle install --jobs 20 --retry 5' -t $STAGING_REPOSITORY_URI:$IMAGE_TAG .
      - echo Staging Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $STAGING_REPOSITORY_URI:$IMAGE_TAG
      # - echo Writing image definitions file...
      # - printf '[{"name":"admin","imageUri":"%s"}]' $STAGING_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - docker build --build-arg BUNDLE_INSTALL_CMD='bundle install --jobs 20 --retry 5' -t $PRODUCTION_REPOSITORY_URI:$IMAGE_TAG .
      - echo Staging Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $PRODUCTION_REPOSITORY_URI:$IMAGE_TAG
      # - echo Writing image definitions file...
      # - printf '[{"name":"admin","imageUri":"%s"}]' $PRODUCTION_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - set +x
